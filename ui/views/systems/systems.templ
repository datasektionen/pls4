package systems

import "github.com/datasektionen/pls4/models"
import "github.com/datasektionen/pls4/ui/util"

var textInput = "border border-gray-400 rounded outline-none focus:border-blue-400 focus:border-2 focus:-m-px px-1"

templ listSystems(systems []string, mayDelete bool) {
	<h1 class="text-2xl font-bold">Systems</h1>
	<section class={ "grid grid-cols-[1fr" + util.If(mayDelete, "_1fr", "") + "]" }>
		if mayDelete {
			<p>System</p>
			<p>Options</p>
		}
		for _, id := range systems {
			@system(id, mayDelete)
		}
	</section>
	<form
		class="pt-3 flex gap-3"
		hx-post="/system"
		hx-target="previous section"
		hx-on:htmx:after-request="if (event.detail.xhr.status == 200) this.reset()"
		hx-swap="beforeend"
	>
		<input type="text" name="system-id" class={ textInput }/>
		<button>Add</button>
	</form>
}

templ system(systemID string, mayDelete bool) {
	<li class="grid grid-cols-subgrid col-span-2">
		<a class="text-blue-500 underline capitalize" href={ templ.SafeURL("/system/" + systemID) }>{ systemID }</a>
		if mayDelete {
			<button class="text-red-800 place-self-start" hx-delete={ "/system/" + systemID } hx-target="closest li">Delete</button>
		}
	</li>
}

templ permissionsForSystem(id string, permissions []models.Permission, mayUpdate bool) {
	<h1 class="text-2xl font-bold capitalize">{ id }</h1>
	<section class={ "grid grid-cols-[auto_1fr" + util.If(mayUpdate, "_1fr", "") + "] gap-x-3 gap-y-1 items-center" }>
		<p class="font-bold">Permission</p>
		<p class="font-bold">Has scope</p>
		if mayUpdate {
			<p class="font-bold">Options</p>
		}
		for _, perm := range permissions {
			@permission(id, perm, mayUpdate)
		}
	</section>
	if mayUpdate {
		<h2 class="text-lg font-bold pt-4 pb-1">Add new:</h2>
		<form
			class="flex gap-2"
			hx-post={ "/system/" + id + "/permission" }
			hx-target="previous section"
			hx-swap="beforeend"
			hx-on:htmx:after-request="if (event.detail.xhr.status == 200) this.reset()"
		>
			<label for="permission-id">Permission</label>
			<input type="text" id="permission-id" name="permission-id" class={ textInput }/>
			<label for="has-scope">Has scope</label>
			<input type="checkbox" id="has-scope" name="has-scope"/>
			<button class="bg-gray-300 rounded px-1">Add</button>
		</form>
	}
}

templ permission(systemID string, perm models.Permission, mayUpdate bool) {
	<div class="grid grid-cols-subgrid col-span-full permission-row" hx-target="this">
		<p>{ perm.ID }</p>
		<div class="w-5 h-5 border-2 border-neutral-500 rounded-md flex items-center justify-center">
			if perm.HasScope {
				<svg class="w-[80%] h-[80%] text-green-800 fill-current" viewBox="0 0 20 20">
					<path d="M0 11l2-2 5 5L18 3l2 2L7 18z"></path>
				</svg>
			}
		</div>
		if mayUpdate {
			<div>
				<button class="text-red-800" hx-delete={ "/system/" + systemID + "/permission/" + perm.ID } hx-swap="outerHTML">Remove</button>
				if perm.HasScope {
					<button
						class="text-amber-600"
						hx-delete={ "/system/" + systemID + "/permission/" + perm.ID + "/scope" }
						hx-confirm="All scopes on instances of this permission will be deleted"
					>Remove scope</button>
				} else {
					<button
						class="text-green-600"
						hx-post={ "/system/" + systemID + "/permission/" + perm.ID + "/scope" }
						hx-prompt="What should the scope be set to in all existing instances?"
					>Add scope</button>
				}
			</div>
		}
	</div>
}
